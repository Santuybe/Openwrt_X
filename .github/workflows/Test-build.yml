name: OpenWrt Builder

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      branch:
        description: "OpenWrt Branch"
        required: false
        default: "main"

env:
  REPO_URL: https://github.com/lkiuyu/openwrt-ufi
  REPO_BRANCH: ${{ github.event.inputs.branch || 'main' }}
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: .config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
  TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
  TZ: Asia/Jakarta

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Install Dependencies
      run: |
        sudo apt update -qq
        sudo apt install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison \
                            build-essential bzip2 ccache cmake cpio curl device-tree-compiler \
                            fastjar flex gawk gettext gcc-multilib g++-multilib git gperf \
                            haveged help2man intltool libc6-dev-i386 libelf-dev libfuse-dev \
                            libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev \
                            libncurses5-dev libncursesw5-dev libpython3-dev libreadline-dev \
                            libssl-dev libtool lrzsz mkisofs msmtp ninja-build p7zip \
                            p7zip-full patch pkgconf python3 python3-pyelftools \
                            python3-setuptools qemu-utils rsync scons squashfs-tools \
                            subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd \
                            zlib1g-dev android-tools-mkbootimg
        sudo apt autoremove -y && sudo apt clean

    - name: Clone OpenWrt Source Code
      run: |
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf $PWD/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Load Custom Feeds
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: Update & Install Feeds
      run: |
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Load Custom Configuration
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH

    - name: Download Packages with Retry
      run: |
        cd openwrt
        make defconfig
        for i in {1..3}; do make download -j8 && break || sleep 10; done

    - name: Compile Firmware
      id: compile
      run: |
        cd openwrt
        make -j$(nproc) || make -j1 V=s
        echo "status=success" >> $GITHUB_ENV

    - name: Upload Firmware
      uses: actions/upload-artifact@v4
      if: env.status == 'success'
      with:
        name: OpenWrt_Firmware
        path: openwrt/bin/targets/*/*

    - name: Send Telegram Notification
      if: always()
      run: |
        STATUS="Build Sukses ✅"
        if [[ "${{ env.status }}" != "success" ]]; then
          STATUS="Build Gagal ❌"
        fi
        curl -s -X POST "https://api.telegram.org/bot${{ env.TELEGRAM_BOT_TOKEN }}/sendMessage" \
        -d "chat_id=${{ env.TELEGRAM_CHAT_ID }}" \
        -d "text=${STATUS}%0ARepository: ${{ github.repository }}%0ABranch: ${{ env.REPO_BRANCH }}"

    - name: Delete Old Workflow Runs
      uses: Mattraks/delete-workflow-runs@v2
      with:
        retain_days: 5
        keep_minimum_runs: 2
